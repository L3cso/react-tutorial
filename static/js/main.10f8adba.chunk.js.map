{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","initialstate","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"yNAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACxC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,KAeFS,EAZD,SAAAV,GACZ,IAAOE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCejDE,G,kNA7CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAGPM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACd,MAAsBA,EAAMC,OAArBV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,MAEb,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKG,e,4CAGrB,WACE,MAAoBC,KAAKT,MAAlBP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IAEb,OACE,iCACE,uBAAOgB,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHR,MAAOX,EACPoB,SAAUJ,KAAKR,eACjB,uBAAOS,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHR,MAAOV,EACPmB,SAAUJ,KAAKR,eACf,uBAAOU,KAAK,SAASP,MAAM,SAAST,QAASc,KAAKH,oB,GAxCzCQ,cCgCFC,E,4MA7Bbf,MAAQ,CACJgB,WAAY,I,EAGhBpB,gBAAkB,SAACJ,GACf,IAAOwB,EAAc,EAAKhB,MAAnBgB,WAEP,EAAKX,SAAS,CACVW,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM3B,Q,EAKzBe,aAAe,SAACW,GACZ,EAAKb,SAAS,CAACW,WAAW,GAAD,mBAAM,EAAKhB,MAAMgB,YAAjB,CAA6BE,O,4CAG1D,WACI,IAAOF,EAAcP,KAAKT,MAAnBgB,WACP,OACI,sBAAKI,UAAU,YAAf,UACA,cAAC,EAAD,CAAO/B,cAAe2B,EAAYpB,gBAAiBa,KAAKb,kBACxD,cAAC,EAAD,CAAMW,aAAcE,KAAKF,sB,GAxBnBO,a,MCGlBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.10f8adba.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row,index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nconst Table = props => {\n  const {characterData, removeCharacter} = props;\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  )\n  \n}\n\nexport default Table","import React, {Component} from 'react';\nimport { isElement } from 'react-dom/test-utils';\n\nclass Form extends Component {\n  initialState = {\n    name: '',\n    job: ''\n  }\n\n  state = this.initialState\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialstate)\n  }\n\n  render() {\n    const {name, job} = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n          <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    )\n  }\n}\n\nexport default Form;\n","import React, {Component} from 'react'\nimport Table from './Table';\nimport Form from './Form';\n\n\nclass App extends Component {\n    state = {\n        characters: []\n    }\n\n    removeCharacter = (index) => {\n        const {characters} = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            })\n        })\n    }\n\n    handleSubmit = (character) => {\n        this.setState({characters: [...this.state.characters, character]})\n    }\n\n    render() {\n        const {characters} = this.state\n        return (\n            <div className=\"container\">\n            <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n            <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n  }\n\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}